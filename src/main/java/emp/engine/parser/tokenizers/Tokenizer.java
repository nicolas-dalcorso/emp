package emp.engine.parser.tokenizers;

import java.util.List;
import emp.engine.primitives.token.Token;
import emp.engine.parser.Parser;
import emp.engine.parser.mappers.TokenMapper;


/**
 * A {@link Tokenizer} is an object that can be used to tokenize a given input.
 * Its responsabilities are:
 * -	hold the input to be tokenized in a buffer
 * -	invoke a {@link TokenMapper} to map the tokens
 * -	return the mapped tokens
 * 
 * The {@link Tokenizer} is used by the {@link Parser} to tokenize the input. It must have the following fields:
 * -	input_buffer, a {@link String} that holds the input to be tokenized
 * -	token_mapper, a {@link TokenMapper} that will be used to map the tokens
 * -	tokens, a {@link List} of {@link Token}s that holds the mapped tokens
 * 
 * The {@link Tokenizer} must have the following methods:
 * -	tokenize, a method that will tokenize the input and return the tokens
 * -	get_tokens, a method that will return the tokens
 * -	get_input_buffer, a method that will return the input buffer
 * -	set_input_buffer, a method that will set the input buffer
 * -	get_token_mapper, a method that will return the token mapper
 * -	set_token_mapper, a method that will set the token mapper
 * 
 * The methods use generic typping to allow for different types of tokens to be used.
 */
public interface Tokenizer {
	/**
	 * Tokenizes the input buffer and returns the tokens.
	 * 
	 * @return a list of tokens
	 */
	List<Token> tokenize();

	/**
	 * Returns the tokens generated by the tokenizer.
	 * 
	 * @return a list of tokens
	 */
	List<Token> get_tokens();

	/**
	 * Returns the input buffer of the tokenizer.
	 * 
	 * @return the input buffer
	 */
	String get_input_buffer();

	/**
	 * Sets the input buffer of the tokenizer.
	 * 
	 * @param input_buffer the input buffer
	 */
	void set_input_buffer(String input_buffer);

	/**
	 * Returns the token mapper of the tokenizer.
	 * 
	 * @return the token mapper
	 */
	TokenMapper get_token_mapper();

	/**
	 * Sets the token mapper of the tokenizer.
	 * 
	 * @param token_mapper the token mapper
	 */
	void set_token_mapper(TokenMapper token_mapper);
}
